name: Worked Mekiki

on:
  schedule:
    - cron: '0 22 * * *'  # Start the process every day at 22:00
  workflow_dispatch:
    inputs:
      action:
        description: 'Action to perform (start, check, stop)'
        required: true
        default: 'start'
        type: string
      end_time:
        description: 'End time for retry loop (HH:mm format)'
        required: false  # Not needed for automatic execution
        type: string

jobs:
  prepare:
    runs-on: [self-hosted, windows]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3
        
      - name: Prepare Project Directory
        run: |
          $projectDir = "C:\CSharp.Hutzper.Library"
          $repositoryUrl = "https://github.com/Hutzper-inc/CSharp.Hutzper.Library.git"
          
          if (-Not (Test-Path $projectDir)) {
            git clone $repositoryUrl $projectDir
          } else {
            Set-Location -Path $projectDir
            git pull origin develop
          }
        shell: powershell

      - name: Start Process
        run: |
          # Run the PowerShell script to start the process
          powershell.exe -File scripts/start_process.ps1

  check-process:
    needs: prepare
    runs-on: [self-hosted, windows]
    steps:
      - name: Check if Process is Alive
        run: |
          # Wait for 30 seconds before starting the check
          Start-Sleep -Seconds 30

          # Check if the process is alive for 1 minute
          $processName = "Hutzper.Project.Mekiki"
          $startTime = Get-Date
          $endTime = $startTime.AddMinutes(1)
          
          while ((Get-Date) -lt $endTime) {
            $process = Get-Process -Name $processName -ErrorAction SilentlyContinue

            if ($process) {
              Write-Output "$processName is running."
              exit 0
            }

            Start-Sleep -Seconds 5  # Check every 5 seconds
          }
          
          Write-Output "$processName has stopped within the 1-minute check period."
          exit 1
        shell: powershell

  retry-loop:
    needs: check-process
    runs-on: [self-hosted, windows]
    steps:
      - name: Check Process Every 5 Seconds
        run: |
          if (${{ github.event_name }} == 'schedule') {
            # During automatic execution (starts at 22:00)
            $endTime = (Get-Date).Date.AddHours(6)  # Check until 6:00 the next day
          } else {
            # During manual execution
            $endTimeString = '${{ github.event.inputs.end_time }}'
            if (-Not $endTimeString) {
              Write-Output "End time is not specified."
              exit 1
            }
            $endTime = [datetime]::ParseExact($endTimeString, 'HH:mm', $null).Date.AddHours([datetime]::ParseExact($endTimeString, 'HH:mm', $null).Hour).AddMinutes([datetime]::ParseExact($endTimeString, 'HH:mm', $null).Minute)
            
            if ($endTime -lt (Get-Date)) {
              $endTime = $endTime.AddDays(1)  # Set to the next day if it's already past the end time
            }
          }

          while ((Get-Date) -lt $endTime) {
            Start-Sleep -Seconds 5  # Recheck every 5 seconds

            # Recheck the process
            $isAlive = .\scripts\check_process.ps1
            if ($isAlive -eq $false) {
              $deadTime = Get-Date -Format "yyyy-MM-dd HH:mm:ss"
              Write-Output "The process stopped at $deadTime."
              exit 1  # Return error code to notify GitHub Actions
            }
          }
          Write-Output "The process stayed alive until the specified end time. Ending session."

  finalize:
    needs: retry-loop
    runs-on: [self-hosted, windows]
    steps:
      - name: Gracefully End Process
        run: |
          # Run the script to gracefully end the Mekiki process
          powershell.exe -File scripts/end_process.ps1

      - name: Notify GitHub Actions of Result
        run: |
          Write-Output "Process result: Success" # Display success message
